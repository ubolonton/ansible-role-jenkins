- name: Update global credential "{{ item['id'] }}"
  environment:
    JENKINS_AUTH: "{{ jenkins_admin_username }}:{{ jenkins_admin_password }}"
  shell: "java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }} -auth $JENKINS_AUTH update-credentials-by-xml 'SystemCredentialsProvider::SystemContextResolver::jenkins' _ {{ item['id'] }}"
  args:
    chdir: "{{ jenkins_home }}"
    stdin: |
      <{{ item['type'] }}>
        <scope>GLOBAL</scope>
        <id>{{ item['id'] }}</id>
        <description>{{ item['description'] | default('') }}</description>
        {% if item['username'] is defined %}
          <username>{{ item['username'] }}</username>
        {% endif %}
        {% if item['password'] is defined %}
          <password>{{ item['password'] }}</password>
        {% endif %}
        {% if item['secret'] is defined %}
          <secret>{{ item['secret'] }}</secret>
        {% endif %}
      </{{ item['type'] }}>
  register: cred_update_result
  failed_when: cred_update_result.rc != 0 and cred_update_result.stderr != "No such credential"
  changed_when: cred_update_result.rc == 0

- name: Create global credential "{{ item['id'] }}"
  environment:
    JENKINS_AUTH: "{{ jenkins_admin_username }}:{{ jenkins_admin_password }}"
  shell: "java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }} -auth $JENKINS_AUTH create-credentials-by-xml 'SystemCredentialsProvider::SystemContextResolver::jenkins' _"
  args:
    chdir: "{{ jenkins_home }}"
    stdin: |
      <{{ item['type'] }}>
        <scope>GLOBAL</scope>
        <id>{{ item['id'] }}</id>
        <description>{{ item['description'] | default('') }}</description>
        {% if item['username'] is defined %}
          <username>{{ item['username'] }}</username>
        {% endif %}
        {% if item['password'] is defined %}
          <password>{{ item['password'] }}</password>
        {% endif %}
        {% if item['secret'] is defined %}
          <secret>{{ item['secret'] }}</secret>
        {% endif %}
      </{{ item['type'] }}>
  when: cred_update_result.stderr == "No such credential"
  # register: cred_result
  # failed_when: cred_create_result.rc != 0 and cred_create_result.stderr != "No change"
  # changed_when: cred_create_result.rc == 0
